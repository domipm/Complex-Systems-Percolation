''' 

    CODE USED TO GRAPH THE LATTICE AND THE SORTED LATTICE
    INPUTS: "lattice.txt" -> Text file containing parameters of all nodes (generated by "lattice_generator.cpp")
            "lattice_sorted.txt" -> Text file with the already-sorted nodes (generated by "hoshen-kopelman.cpp")
    OUTPUTS: Both graphs "lattice.png" and "lattice_sorted.png"

'''

import numpy as np
import matplotlib.pyplot as plt

show_circles = True
show_index = False
show_graph = False

L = "500"
N = "36875"
RATIO = "0.00"
P = "0.99"

d_big = 3
d_small = 3

# READ FILES

#data_init = np.loadtxt("init_100_339_0.25_1.00.txt", skiprows=1)

data_init = np.loadtxt("init_" + str(L) + "_" + str(N) + "_" + str(RATIO) + "_" + str(P) + ".txt", skiprows=1)

# PLOT INITIAL STATE

fig, ax = plt.subplots()
ax.set_aspect(1)

x = data_init[:,1] # X position
y = data_init[:,2] # Y position
s = data_init[:,3] # Status (active/inactive)
c = data_init[:,4] # cluster_index
d = data_init[:,5] # Distance to neighbors

ax.set_xlim( (min(x)-0.5, max(x)+0.5) )
ax.set_ylim( (min(y)-0.5, max(y)+0.5) )

#plt.xticks([0,10,20,30,40,50,60,70,80,90,100])
#plt.yticks([0,10,20,30,40,50,60,70,80,90,100])

#plt.grid(visible=True, which="both")

# Plot all points
#ax.scatter(x,y,color="orangered")
# Plot inactive nodes as black points
for i in range(len(x)):
    if (s[i] == 1):
        if (d[i] == d_big): ax.scatter(x[i],y[i],color="darkgreen", marker=".", s=50)
        if (d[i] == d_small): ax.scatter(x[i],y[i],color="olivedrab", marker=".", s=10)
        if (show_circles == True):
            ax.add_artist( plt.Circle( (x[i], y[i]), d[i], fill=False, color="black", alpha=0.15 ) )
    #if (s[i] == 0):
    #    ax.scatter(x[i],y[i],color="black")
    #if (s[i] == 1 and show_circles == True):
    #    ax.add_artist( plt.Circle( (x[i], y[i]), d[i], fill=False, color="black", alpha=0.25 ) )

if show_index == True:
    n = []
    for i in range(len(x)):
        n = np.append(n, str(i))
    for i,n in enumerate(n):
        ax.annotate(n,(x[i],y[i]),size=6, xytext = (x[i]+0.1,y[i]+0.1))

plt.tight_layout()

plt.savefig("lattice_init.png", dpi=300, bbox_inches='tight')
if (show_graph): plt.show()
plt.close()

# PLOT FINAL STATE

exit()

data = np.loadtxt("final_100_339_0.25_1.00.txt", skiprows=1)

x = data[:,1] # X position
y = data[:,2] # Y position
s = data[:,3] # Status (active/inactive)
c = data[:,4] # cluster_index

fig, ax = plt.subplots()
ax.set_aspect(1)

ax.set_xlim( (min(x)-0.5, max(x)+0.5) )
ax.set_ylim( (min(y)-0.5, max(y)+0.5) )

# Plot all points
ax.scatter(x,y,c=c,cmap="rainbow", s=1)
# Plot inactive nodes as black points
for i in range(len(x)):
        if (s[i] == 1 and show_circles == True):
            ax.add_artist( plt.Circle( (x[i], y[i]), d[i], fill=False, color="black", alpha=0.2 ) )

#plt.xticks([0,10,20,30,40,50,60,70,80,90,100])
#plt.yticks([0,10,20,30,40,50,60,70,80,90,100])

plt.grid(visible=True, which="both")

plt.tight_layout()

plt.savefig("lattice_sorted.png", dpi=300, bbox_inches='tight')
if (show_graph): plt.show()
plt.close()